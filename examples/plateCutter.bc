; ModuleID = 'plateCutter.c'
source_filename = "plateCutter.c"
target datalayout = "e-m:w-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc19.15.26730"

%struct.MeasureMents = type { float, float, float, float }
%struct.CuttingLine = type { float, float, float, float }

@.str = private unnamed_addr constant [21 x i8] c"AssemblyLine,0,100,2\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [14 x i8] c"plateCutter.c\00", section "llvm.metadata"
@.str.2 = private unnamed_addr constant [18 x i8] c"PlateSensor,5,5,1\00", section "llvm.metadata"
@.str.3 = private unnamed_addr constant [22 x i8] c"PlateSensorRead,0,5,2\00", section "llvm.metadata"
@.str.4 = private unnamed_addr constant [18 x i8] c"PlateSensor,0,5,1\00", section "llvm.metadata"
@.str.5 = private unnamed_addr constant [20 x i8] c"Laser,1000,2000,180\00", section "llvm.metadata"
@.str.6 = private unnamed_addr constant [18 x i8] c"LaserFiring,0,0,1\00", section "llvm.metadata"
@.str.7 = private unnamed_addr constant [16 x i8] c"Laser,0,1000,10\00", section "llvm.metadata"
@.str.8 = private unnamed_addr constant [12 x i8] c"Delay,0,0,5\00", section "llvm.metadata"
@.str.9 = private unnamed_addr constant [22 x i8] c"MeasurePlate, 0, 5, 2\00", section "llvm.metadata"
@llvm.global.annotations = appending global [9 x { i8*, i8*, i8*, i32 }] [{ i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_start_assembly_line to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 31 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_start_sensor to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 32 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_sensor_read to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 33 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_stop_sensor to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 34 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_fire_laser to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 36 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_laser_firing to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 37 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_stop_laser to i8*), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 38 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_delay to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 39 }, { i8*, i8*, i8*, i32 } { i8* bitcast (void ()* @_measure_plate to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i32 40 }], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_start_assembly_line() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_start_sensor() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_sensor_read() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_stop_sensor() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_fire_laser() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_laser_firing() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_stop_laser() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_delay() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_measure_plate() #0 {
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @checkMeasurements(%struct.MeasureMents*) #0 {
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateLine(%struct.CuttingLine* noalias sret, %struct.MeasureMents*) #0 {
  %3 = getelementptr inbounds %struct.MeasureMents, %struct.MeasureMents* %1, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.MeasureMents, %struct.MeasureMents* %1, i32 0, i32 2
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  %8 = fdiv float %7, 2.000000e+00
  %9 = getelementptr inbounds %struct.CuttingLine, %struct.CuttingLine* %0, i32 0, i32 0
  store float %8, float* %9, align 4
  %10 = getelementptr inbounds %struct.CuttingLine, %struct.CuttingLine* %0, i32 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.CuttingLine, %struct.CuttingLine* %0, i32 0, i32 2
  store float %11, float* %12, align 4
  %13 = getelementptr inbounds %struct.MeasureMents, %struct.MeasureMents* %1, i32 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.CuttingLine, %struct.CuttingLine* %0, i32 0, i32 1
  store float %14, float* %15, align 4
  %16 = getelementptr inbounds %struct.MeasureMents, %struct.MeasureMents* %1, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.CuttingLine, %struct.CuttingLine* %0, i32 0, i32 3
  store float %17, float* %18, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @startController() #0 {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct.MeasureMents, align 4
  %6 = alloca %struct.MeasureMents, align 4
  %7 = alloca %struct.CuttingLine, align 4
  %8 = alloca %struct.MeasureMents, align 4
  %9 = alloca i8, align 1
  %10 = alloca %struct.CuttingLine, align 4
  %11 = alloca i32, align 4
  %12 = call zeroext i1 bitcast (i1 (...)* @start_assembly_line to i1 ()*)()
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %1, align 1
  %14 = load i8, i8* %1, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %53

; <label>:16:                                     ; preds = %0
  %17 = call zeroext i1 bitcast (i1 (...)* @start_sensor to i1 ()*)()
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = load i8, i8* %2, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %52

; <label>:21:                                     ; preds = %16
  %22 = call zeroext i1 bitcast (i1 (...)* @sensor_read to i1 ()*)()
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %3, align 1
  %24 = call zeroext i1 bitcast (i1 (...)* @stop_sensor to i1 ()*)()
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %4, align 1
  %26 = load i8, i8* %3, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %51

; <label>:28:                                     ; preds = %21
  %29 = load i8, i8* %4, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %51

; <label>:31:                                     ; preds = %28
  call void bitcast (void (%struct.MeasureMents*, ...)* @measure_plate to void (%struct.MeasureMents*)*)(%struct.MeasureMents* sret %5)
  %32 = bitcast %struct.MeasureMents* %6 to i8*
  %33 = bitcast %struct.MeasureMents* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 16, i1 false)
  %34 = call zeroext i1 @checkMeasurements(%struct.MeasureMents* %6)
  br i1 %34, label %35, label %50

; <label>:35:                                     ; preds = %31
  %36 = bitcast %struct.MeasureMents* %8 to i8*
  %37 = bitcast %struct.MeasureMents* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 16, i1 false)
  call void @CalculateLine(%struct.CuttingLine* sret %7, %struct.MeasureMents* %8)
  %38 = bitcast %struct.CuttingLine* %10 to i8*
  %39 = bitcast %struct.CuttingLine* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 16, i1 false)
  %40 = call zeroext i1 (%struct.CuttingLine*, ...) @fire_laser(%struct.CuttingLine* %10)
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %9, align 1
  store i32 0, i32* %11, align 4
  br label %42

; <label>:42:                                     ; preds = %45, %35
  call void bitcast (void (...)* @delay to void (i32)*)(i32 5)
  %43 = call zeroext i1 bitcast (i1 (...)* @laser_firing to i1 ()*)()
  %44 = zext i1 %43 to i8
  store i8 %44, i8* %9, align 1
  br label %45

; <label>:45:                                     ; preds = %42
  %46 = load i8, i8* %9, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %42, label %48

; <label>:48:                                     ; preds = %45
  %49 = call zeroext i1 bitcast (i1 (...)* @stop_laser to i1 ()*)()
  br label %50

; <label>:50:                                     ; preds = %48, %31
  br label %51

; <label>:51:                                     ; preds = %50, %28, %21
  br label %52

; <label>:52:                                     ; preds = %51, %16
  br label %53

; <label>:53:                                     ; preds = %52, %0
  ret void
}

declare dso_local zeroext i1 @start_assembly_line(...) #1

declare dso_local zeroext i1 @start_sensor(...) #1

declare dso_local zeroext i1 @sensor_read(...) #1

declare dso_local zeroext i1 @stop_sensor(...) #1

declare dso_local void @measure_plate(%struct.MeasureMents* sret, ...) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

declare dso_local zeroext i1 @fire_laser(%struct.CuttingLine*, ...) #1

declare dso_local void @delay(...) #1

declare dso_local zeroext i1 @laser_firing(...) #1

declare dso_local zeroext i1 @stop_laser(...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i32 %0, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %2
  store i32 0, i32* %3, align 4
  br label %22

; <label>:10:                                     ; preds = %2
  %11 = load i8**, i8*** %4, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i32
  store i32 %14, i32* %6, align 4
  br label %15

; <label>:15:                                     ; preds = %18, %10
  call void @startController()
  %16 = load i32, i32* %6, align 4
  %17 = add nsw i32 %16, -1
  store i32 %17, i32* %6, align 4
  call void bitcast (void (...)* @delay to void (i32)*)(i32 5)
  br label %18

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* %6, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %15, label %21

; <label>:21:                                     ; preds = %18
  store i32 0, i32* %3, align 4
  br label %22

; <label>:22:                                     ; preds = %21, %9
  %23 = load i32, i32* %3, align 4
  ret i32 %23
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
